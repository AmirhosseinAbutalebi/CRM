// <auto-generated />
using System;
using Crm.Infrastructure.Persistent.Ef;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Crm.Infrastructure.Migrations
{
    [DbContext(typeof(CrmDbContext))]
    [Migration("20240607091330_delete-extra-table")]
    partial class deleteextratable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Crm.Domain.TicketAgg.Tickets", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusTicket")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserIdReciver")
                        .HasColumnType("bigint");

                    b.Property<long>("UserIdSender")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Tickets", "ticket");
                });

            modelBuilder.Entity("Crm.Domain.UserAgg.Users", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", "user");
                });

            modelBuilder.Entity("Crm.Domain.TicketAgg.Tickets", b =>
                {
                    b.OwnsMany("Crm.Domain.TicketAgg.TicketDetail", "Items", b1 =>
                        {
                            b1.Property<long>("TicketsId")
                                .HasColumnType("bigint");

                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<long>("Id"));

                            b1.Property<DateTime>("CreationDate")
                                .HasColumnType("datetime2");

                            b1.Property<int>("ReadTicket")
                                .HasColumnType("int");

                            b1.Property<int>("StatusTicket")
                                .HasColumnType("int");

                            b1.Property<string>("Text")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<long>("TicketReciverId")
                                .HasColumnType("bigint");

                            b1.Property<long>("TicketSenderId")
                                .HasColumnType("bigint");

                            b1.HasKey("TicketsId", "Id");

                            b1.ToTable("TicketDetails", "ticket");

                            b1.WithOwner()
                                .HasForeignKey("TicketsId");
                        });

                    b.Navigation("Items");
                });

            modelBuilder.Entity("Crm.Domain.UserAgg.Users", b =>
                {
                    b.OwnsMany("Crm.Domain.UserAgg.UserToken", "Tokens", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<long>("Id"));

                            b1.Property<DateTime>("CreationDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Device")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<DateTime>("ExpireRefreshToken")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("ExpireToken")
                                .HasColumnType("datetime2");

                            b1.Property<string>("HashJwtToken")
                                .IsRequired()
                                .HasMaxLength(250)
                                .HasColumnType("nvarchar(250)");

                            b1.Property<string>("HashRefreshToken")
                                .IsRequired()
                                .HasMaxLength(250)
                                .HasColumnType("nvarchar(250)");

                            b1.Property<long>("UsersId")
                                .HasColumnType("bigint");

                            b1.HasKey("Id");

                            b1.HasIndex("UsersId");

                            b1.ToTable("UserTokens", "user");

                            b1.WithOwner()
                                .HasForeignKey("UsersId");
                        });

                    b.Navigation("Tokens");
                });
#pragma warning restore 612, 618
        }
    }
}
